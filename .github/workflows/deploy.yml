name: Deploy to Vercel

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Debug - Print directory structure
        run: |
          echo "Current directory:"
          pwd
          echo "Contents of current directory:"
          ls -la
          echo "Full directory structure:"
          find . -type d
          echo "Searching for package.json:"
          find . -name package.json

      - name: Locate and set project directory
        run: |
          PROJECT_DIR=$(find . -name package.json -not -path "*/node_modules/*" -printf '%h\n' | sort | head -n 1)
          if [ -z "$PROJECT_DIR" ]; then
            echo "No package.json found in the repository"
            exit 1
          fi
          echo "Project directory: $PROJECT_DIR"
          echo "PROJECT_DIR=$PROJECT_DIR" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          cd $PROJECT_DIR
          npm install -g vercel
          npm install --legacy-peer-deps

      - name: Build project
        run: |
          cd $PROJECT_DIR
          npm run build

      - name: Remove existing .vercel directory
        run: |
          cd $PROJECT_DIR
          rm -rf .vercel

      - name: Configure Vercel
        run: |
          cd $PROJECT_DIR
          mkdir -p .vercel
          echo '{
            "version": 2,
            "buildCommand": "npm run build",
            "outputDirectory": ".next",
            "framework": "nextjs",
            "srcDirectory": "."
          }' > .vercel/project.json

      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          cd $PROJECT_DIR
          vercel pull --yes --environment=production --token=$VERCEL_TOKEN
          vercel build --prod --token=$VERCEL_TOKEN
          vercel deploy --prod --token=$VERCEL_TOKEN --yes

